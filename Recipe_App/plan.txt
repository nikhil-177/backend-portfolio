for users:-
register -post
login -post 
recipes -get 
recipes favourite or bookmark -post
profile -get
profile -put
profile -delete
comment & rate on recipes -post
comment & rate on recipes -get
create new recipes -post
get details about the recipes you created -get

for admins:-
approve/reject recipes came from users -post
admin can post recipes immediately not approval needed -post
recipes data -get
recipes data -put
recipes data -delete


Steps :-

Day-1 ----------
make user register and send him his data  -post -/api/v1/auth/register
make user login and send him tokens and welcome message -post -/api/v1/auth/login
make password hash for data safety
make access and refresh token route for users data safety  -post -/api/v1/auth/refresh-token

Day-2 ----------
get user profile -get -/api/v1/profile
update user profile -put -api/v1/profile
delete user profile -delete -api/v1/profile
make user logout -post -api/v1/auth/logout
make validation checks on user register and login 
make validation checks on profile update also
make auth middleware for user to get,update,delete,logout his profile
make recipe model 

Day-3 ----------
make admin login route but only approve access if email/password correct and role is admin -post -api/v1/auth/login
make route where admin can create recipes -post -api/v1/recipes/create -admin only route
make route where admin can update recipes -put -api/v1/recipes/update/:id -admin only route
make route to delete recipes -delete -api/v1/recipes/delete/:id -admin only route
get all recipes make sure th approved ones only come no pending ones -get -api/v1/recipes
get specific one recipe -get -api/v1/recipes/:id
get recipes been trying to create by users in admin and he approves if pass or fail -get -api/v1/recipes/:status -admin only route
get user created recipe -get -api/v1/users/createdRecipes
users can post comments on certain recipes -post -/api/v1/users/comments/post
users can get their comments -get -/api/users/comments